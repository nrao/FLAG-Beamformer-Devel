
FFTSize = get_var('FFTSize', 'defaults', defaults, varargin{:});
FFTStage = get_var('FFTStage', 'defaults', defaults, varargin{:});
input_bit_width = get_var('input_bit_width', 'defaults', defaults, varargin{:});
coeff_bit_width = get_var('coeff_bit_width', 'defaults', defaults, varargin{:});
use_bram = get_var('use_bram', 'defaults', defaults, varargin{:});
coeffs_bram = get_var('coeffs_bram', 'defaults', defaults, varargin{:});
delays_bram = get_var('delays_bram', 'defaults', defaults, varargin{:});
MaxCoeffNum = get_var('MaxCoeffNum', 'defaults', defaults, varargin{:});
quantization = get_var('quantization', 'defaults', defaults, varargin{:});
overflow = get_var('overflow', 'defaults', defaults, varargin{:});
add_latency = get_var('add_latency', 'defaults', defaults, varargin{:});
mult_latency = get_var('mult_latency', 'defaults', defaults, varargin{:});
bram_latency = get_var('bram_latency', 'defaults', defaults, varargin{:});
arch = get_var('arch', 'defaults', defaults, varargin{:});
opt_target = get_var('opt_target', 'defaults', defaults, varargin{:});
use_hdl = get_var('use_hdl', 'defaults', defaults, varargin{:});
use_embedded = get_var('use_embedded', 'defaults', defaults, varargin{:});
dsp48_adders = get_var('use_embedded', 'defaults', defaults, varargin{:});



if(FFTStage == 1 ),
    Coeffs = 0;
else,
    
end

% Propagate parameters to the butterfly
reuse_block( blk, 'butterfly_direct', 'casper_library/FFTs/butterfly_direct', ...
    'biplex', 'on', 'Coeffs', tostring(Coeffs), 'StepPeriod', tostring(StepPeriod), ...
    'Position', [435 32 530 118]);
    propagate_vars([blk,'/butterfly_direct'], 'defaults', defaults, varargin{:});

clean_blocks(blk);

fmtstr = sprintf('FFTSize=%d, FFTStage=%d,\n coeffs_bram=%s,\n delays_bram=%s\n', FFTSize, FFTStage, tostring(coeffs_bram), tostring(delays_bram));
set_param(blk, 'AttributesFormatString', fmtstr);
save_state(blk, 'defaults', defaults, varargin{:});
