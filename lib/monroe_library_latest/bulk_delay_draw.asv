xBlock;

numInputs = 4;
delay_arr = [1,1,2,2];

[vertSize, horizSize] = size(delay_arr);

if(vertSize ~= 1)
    disp('error: delay_arr must be an integer or an 1-by-N array');
    error('error: delay_arr must be an integer or an 1-by-N array');
end



%if they just gave us a number, they want the delays to ba all the same.
if(horizSize == 1)
   delay_arr = delay_arr * ones(1,numInputs);
elseif(horizSize ~= numInputs)
    disp('error: delay_arr must be either an integer, or a list numInputs elements long.');
    error('error: delay_arr must be either an integer, or a list numInputs elements long.');
end


for(i = 1:numInputs)
   sIn{i} = xInport(strcat('in', num2str(i)));
   sOut{i} = xOutport(strcat('out', num2str(i)));
   
   sDelayed = xDelay(sIn{i}, delay_arr(i));
   sOut{i}.bind(sDelayed);
end